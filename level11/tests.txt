"1+(2+3*(4+5-sin(45*cos(a))))/7" "a = 45"
5.570141

"-1-1"
-2

"1-(-1)"
2

"2 - 9 + 10"
3

"1 + 2 / 5"
1.4

"2^(2^3)"
256

"2^2^3"
256

"5-5+1*2^a/b" "a = 1" "b = 10"
0.2

"1 + a * 2" "a = 2"
5

"1 + a ^ 2" "a = 2"
5

"1 + a / 2" "a = 2"
2

"1 + 1 + 1 + 1 + 1"
5

"1.0 + 1.0 + 1.0 + 1.0 + 1.0"
5

"(5)-4-(4+3)"
-6

"((2 + 1) * 3)"
9

"(4 + (13 / 5))"
6.6

"3 + 4 * 2 / (1-5) ^ 2"
3.5

"(100 + 200) / 2 * 5 + 7"
757

"1 + ((2 + 5^3 * (4 + 5 - sqrt(45 * sqrt(30)) + (2 * ((3 * sqrt(30)) + (5 * 30))))) - 5) / 7"
5824.9254707

"(a+b)*(c+d)-e" "a=1" "b=2" "c=1" "d=2" "e=-1"
10

" 5 - 5 + 1 * 2 ^ a / b" "a = 1" "b = 10"
0.2

"1.5 + b - 2.001" "b = 0.5"
-0.001

"a + a + a + a + b" "a = -1" "b = -1" "c = 0"
-5

"a * b + c * d" "a = 2" "b = 100" "c = -100" "d = -1"
300

"a * b - c * d" "a = 2" "b = 100" "c = -100" "d = -1"
100

"-a + b * c / d ^ 2" "a = -2" "b = 3" "c = 4" "d = 5"
2.48

"var1 * 5 + var2 ^ 0" "var1 = 0" "var2 = 0"
1

"var1 * 5 + var2 ^ 2" "var1 = 0" "var2 = 0"
0

"a + aa * aaa / aaaa" "aa = 1" "a = 10" "aaaa = -1" "aaa = 3"
7

"a + aa * aaa / aaaa" "aa = 1" "a = 10" "aaaa = -1" "aaa = -3"
13

"-a + aa * aaa / aaaa + a ^ 2" "aa=1" "a=-10" "aaaa = -1" "aaa = 3"
107

"a+b*(c^d-e)^(f+g*h)-i" "a=-1" "b=1" "c=-2" "d=2" "e=0" "f=1" "g=-1" "h=-1" "i=-1"
16

"- 4 ^ power" "power = -2.5"
-0.03125

"(1+2+3)+4)"
invalid

"()+5"
invalid

"(1+(1+1)"
invalid

"(1+(1+1)))"
invalid

"sina(10)"
invalid

"125 + cos(1.11) + sin(a)" "a = 2"
126.35396

"sin(90)-15*(25+12/(2-3)*a)" "a=2"
-14.10600

"sin(-60)"
0.3048106

"cos(-60)"
-0.95241296

"tan(-60)"
-0.32004037

"atan(-60)"
-1.5541312

"sqrt(4) * sin(15) + tan(30) - log10(1000)"
-8.104755

"log10(-100)"
invalid

"log2(-8)"
invalid

"sqrt(-16)"
invalid

"( - (10 * (6 / ((9 + 3) * -11))) + 17) + 5"
22.454546

"10 - -10 * 2"
30

"-2 * -2"
4

"1-(-(-(-1)))"
2


"1-(((-1)))"
2

"cos(-a)" "a=-30"

"-a * -b" "a= -2" " b = - 2"

"a + aaa * - a + aa / - a + a^-4" "a=2" "aa=2" "aaa=2"

"-a^-a^-a^-a" "a = -2"

Є варіант зробити щось на кшталт HashMap <String, IAction>, де IAction — це інтерфейс, який має метод (спрощений приклад)double calculate (double number), відповідно ключами цієї мепи будуть назви функцій.